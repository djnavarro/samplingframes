model {

  # mean and covariance matrix defining the Gaussian process
  for(i in 1:ncat) {
    mean_gp[i] <- m
    cov_gp[i,i] <- (sigma^2) + (tau^2)
    for(j in (i+1):ncat) {
      cov_gp[i,j] <- (tau^2) * exp(-rho * (test[i] - test[j])^2)
      cov_gp[j,i] <- cov_gp[i,j]
    }
  }

  # sample a function from the Gaussian process
  cov_gp_inv <- inverse(cov_gp)
  f ~ dmnorm(mean_gp, cov_gp_inv)

  # pass f through logit function to get a function on [0,1]
  for(i in 1:ncat) {
    phi[i] <- 1/(1+exp(-f[i]))
  }

  # category sampling: the N observations are all sampled with the
  # constraint that they come from the target category (i.e. test[1])
  for(i in 1:nobs) {
    plaxium[i] ~ dbern(phi[category[i]])
  }

  # xxxxx
  # inverted category sampling can take two forms. either, it could be
  # assume the categories are fixed, or it could be assume that they are
  # constrained only to be not-small-birds but otherwise chosen from
  # base rates

  # version 1: fixed categories... probability of P- given C is just the
  # bernoulli probability
  for(i in 1:nfree) {
    p_free[i] <- phi[category_free[i]]
    plaxium_free[i] ~ dbern(p_free[i])
  }

  # version 2: random not-small-birds... include the probability of P-
  # given the categories, but we also need to assign probability to the
  # specific not-bird category

  # category base rates sampled from dirichlet prior
  base ~ ddirch(alpha)

  # assign small bird probability zero
  base2[1] <- 0
  denom_b2 <- sum(base[2:ncat])
  for(i in 2:ncat) {
    base2[i] <- base[i] / denom_b2
  }

  # now sample the specific categories
  for(i in 1:nfree) {
    category_free[i] ~ dcat(base2)
  }

  # NOTE: they yield the same inference about phi, I think, because
  # the specific distribution of negative observations does not depend
  # on phi???

  # ooooo

}
